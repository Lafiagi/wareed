# Generated by Django 4.1.6 on 2023-02-14 10:52

import authy.managers
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('full_name', models.CharField(help_text='The user fullname.', max_length=255)),
                ('email', models.EmailField(help_text='The user email address.', max_length=255, unique=True)),
                ('phone_number', models.CharField(blank=True, help_text='The user phone number.', max_length=11, null=True)),
                ('password', models.CharField(blank=True, max_length=128, null=True, validators=[django.core.validators.MaxLengthValidator(limit_value=128)])),
                ('date_created', models.DateTimeField(auto_now_add=True, help_text='The date and time user was created.')),
                ('date_modified', models.DateTimeField(auto_now=True, help_text='The date and time user user modified.')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', authy.managers.UserManager()),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email', 'phone_number'], name='users_email_27b56c_idx'),
        ),
    ]
